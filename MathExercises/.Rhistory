5/51
png('Exercise1_2a.png')
n = 10
xBar = 1.873
sigma2 = 1
mu_0 = 0;
tau2_0 = 5
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(xBar-4*sqrt(sigma2/n), xBar+4*sqrt(sigma2/n), length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)), ylim = c(0, maxAll),
main = '')
lines(thetaGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(thetaGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 1, at = seq(0, 1, by = 0.1))
axis(side = 2, at = seq(min(muGrid), max(muGrid), length = 10))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1.5,1.5,1.5),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
c(min(muGrid),max(muGrid))
lines(thetaGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(thetaGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
plot(thetaGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
mu_n
png('Exercise1_2a.png')
n = 10
xBar = 1.873
sigma2 = 1
mu_0 = 0;
tau2_0 = 5
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(xBar-4*sqrt(sigma2/n), xBar+4*sqrt(sigma2/n), length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 1, at = seq(0, 1, by = 0.1))
axis(side = 2, at = seq(min(muGrid), max(muGrid), length = 10))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1.5,1.5,1.5),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
# Problem 2
# 2a)
png('Exercise1_2a.png')
n = 10
xBar = 1.873
sigma2 = 1
mu_0 = 0;
tau2_0 = 5
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(xBar-4*sqrt(sigma2/n), xBar+4*sqrt(sigma2/n), length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, 1, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), length = 10))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1.5,1.5,1.5),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
png('Exercise1_2a.png')
n = 10
xBar = 1.873
sigma2 = 1
mu_0 = 0;
tau2_0 = 5
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, 1, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), length = 10))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1.5,1.5,1.5),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
c(min(muGrid),max(muGrid))
png('Exercise1_2a.png')
n = 10
xBar = 1.873
sigma2 = 1
mu_0 = 0;
tau2_0 = 5
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, 1, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1.5,1.5,1.5),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
# Problem 2
# 2a)
png('Exercise1_2a.png')
n = 10
xBar = 1.873
sigma2 = 1
mu_0 = 0;
tau2_0 = 5
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, 1, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
png('Exercise1_2a.png')
n = 10
xBar = 1.873
sigma2 = 1
mu_0 = 0;
tau2_0 = 5
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
png('Exercise1_2b.png')
n = 10
xBar = 0.582
sigma2 = 2
mu_0 = 1.836;
tau2_0 = 5/51
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
# 2c)
png('Exercise1_2c.png')
n = 8
xBar = 0.582
sigma2 = 3
mu_0 = 1.4237;
tau2_0 = 5/76
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
png('Exercise1_2cCont.png')
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = 1.3271, sd = sqrt(0.05597))
normLike = (1- pnorm((3-muGrid)/sqrt(3)))^2
postDens = priorDens*normLike
postDens = (postDens/sum(postDens))*(muGrid[2]-muGrid[1])
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
# 2c) Continue with last two corrupted data points
png('Exercise1_2cCont.png')
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = 1.3271, sd = sqrt(0.05597))
normLike = (1- pnorm((3-muGrid)/sqrt(3)))^2
postDens = priorDens*normLike
postDens = postDens/sum(postDens)*(muGrid[2]-muGrid[1])
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
png('Exercise1_2cCont.png')
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = 1.3271, sd = sqrt(0.05597))
normLike = (1- pnorm((3-muGrid)/sqrt(3)))^2
postDens = priorDens*normLike
postDens = postDens/(sum(postDens)*(muGrid[2]-muGrid[1]))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
# 2c)
png('Exercise1_2c.png')
n = 8
xBar = 0.582
sigma2 = 3
mu_0 = 1.4237;
tau2_0 = 5/76
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood, 8 ok data points", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
# 2c) Continue with last two corrupted data points
png('Exercise1_2cCont.png')
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = 1.3271, sd = sqrt(0.05597))
normLike = (1- pnorm((3-muGrid)/sqrt(3)))^2
postDens = priorDens*normLike
postDens = postDens/(sum(postDens)*(muGrid[2]-muGrid[1]))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood, 2 truncated obs", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
###############
### Problem 3
###############
# 3a)
png('Exercise1_3a.png')
n = 10
xBar = 1.873
sigma2 = 1
mu_0 = 0;
tau2_0 = 5
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
# 3b)
png('Exercise1_3b.png')
n = 10
xBar = 0.582
sigma2 = 2
mu_0 = 1.836;
tau2_0 = 5/51
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
# 3c)
png('Exercise1_3c.png')
n = 8
xBar = 0.582
sigma2 = 3
mu_0 = 1.4237;
tau2_0 = 5/76
w = (n/sigma2)/((n/sigma2)+1/tau2_0)
mu_n = w*xBar + (1-w)*mu_0
tau2_n = 1/((n/sigma2)+1/tau2_0)
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = mu_0, sd = sqrt(tau2_0))
normLike = dnorm(x = muGrid, mean = xBar, sd = sqrt(sigma2/n))
postDens = dnorm(x = muGrid, mean = mu_n, sd = sqrt(tau2_n))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood, 8 ok data points", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
# 3c) Continue with last two corrupted data points
png('Exercise1_3cCont.png')
muGrid = seq(-2, 5, length = 1000)
priorDens = dnorm(x = muGrid, mean = 1.3271, sd = sqrt(0.05597))
normLike = (1- pnorm((3-muGrid)/sqrt(3)))^2
postDens = priorDens*normLike
postDens = postDens/(sum(postDens)*(muGrid[2]-muGrid[1]))
maxAll = max(priorDens,postDens,normLike)
par(cex.lab=cexLabDef, cex.axis = cexAxisDef)
plot(muGrid, priorDens, type = "l", col = plotColors[2], xlab=TeX('$\\mu$'),
lwd = lwdThin, axes=FALSE, ylab = 'Density', xlim = c(min(muGrid),max(muGrid)),
ylim = c(0, maxAll),  main = '')
lines(muGrid, normLike, type = "l", col = plotColors[7], lwd = lwdThin)
lines(muGrid, postDens, type = "l", col = plotColors[6], lwd = lwdThin)
axis(side = 2, at = seq(0, maxAll, by = 0.1))
axis(side = 1, at = seq(min(muGrid), max(muGrid), by = 1))
legend(x = "topright", inset=.05,
legend = c("Prior", "Likelihood, 2 truncated obs", "Posterior"),
cex = c(1,1,1),
lwd = c(lwdThin,lwdThin,lwdThin),
lty=c(1,1,1),
col = c(plotColors[2], plotColors[7], plotColors[6]))
dev.off()
