prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(2,2))
hist(results$betaSample[,2], 50, freq=FALSE, main = 'Posterior of beta_1', xlab = "beta_1")
hist(results$betaSample[,3], 50, freq=FALSE, main = 'Posterior of beta_2', xlab = "beta_2")
hist(results$betaSample[,4], 50, freq=FALSE, main = 'Posterior of beta_3', xlab = "beta_3")
hist(results$betaSample[,5], 50, freq=FALSE, main = 'Posterior of beta_4', xlab = "beta_4")
print(colMeans(results$betaSample))
print(results$ESS)
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(2,2))
hist(results$betaSample[,2], 50, freq=FALSE, main = 'Posterior of beta_1', xlab = "beta_1")
hist(results$betaSample[,3], 50, freq=FALSE, main = 'Posterior of beta_2', xlab = "beta_2")
hist(results$betaSample[,4], 50, freq=FALSE, main = 'Posterior of beta_3', xlab = "beta_3")
hist(results$betaSample[,5], 50, freq=FALSE, main = 'Posterior of beta_4', xlab = "beta_4")
print(colMeans(results$betaSample))
print(results$ESS)
xbar_FL = 14
xbar_FW = 300
xbar_ML = 12
xbar_MW = 280
sigma_L = 2
sigma_W = 50
prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
# The posterior median is the optimal estimator under linear loss function (see Slides Lecture 4)
print(apply(Results$betaSample,2,median))
# The posterior median is the optimal estimator under linear loss function (see Slides Lecture 4)
print(apply(results$betaSample,2,median))
# The posterior median is the optimal estimator under linear loss function (see Slides Lecture 4)
medians <- apply(results$betaSample,2,median)
names(medians) <- covNames
print(medians)
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(3,2))
hist(results$betaSample[,1], 50, freq=FALSE, main = paste('Posterior of ',covNames[i],' beta'), xlab = "beta_0")
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(3,2))
hist(results$betaSample[,1], 50, freq=FALSE, main = paste('Posterior of ',covNames[1],' beta'), xlab = "beta_0")
hist(results$betaSample[,2], 50, freq=FALSE, main = 'Posterior of beta', xlab = "beta_1")
hist(results$betaSample[,3], 50, freq=FALSE, main = 'Posterior of beta2', xlab = "beta_2")
hist(results$betaSample[,4], 50, freq=FALSE, main = 'Posterior of beta_3', xlab = "beta_3")
hist(results$betaSample[,5], 50, freq=FALSE, main = 'Posterior of beta_4', xlab = "beta_4")
# The posterior median is the optimal estimator under linear loss function (see Slides Lecture 4)
medians <- apply(results$betaSample,2,median)
names(medians) <- covNames
print(medians)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
xbar_FL = 14
xbar_FW = 300
xbar_ML = 12
xbar_MW = 280
sigma_L = 2
sigma_W = 50
prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(3,2))
for(i in 1:5){
hist(results$betaSample[,i], 50, freq=FALSE,
main = paste('Posterior of ',covNames[1],' beta'), xlab = paste('beta_',i))
}
# The posterior median is the optimal estimator under linear loss function (see Slides Lecture 4)
medians <- apply(results$betaSample,2,median)
names(medians) <- covNames
print(medians)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
xbar_FL = 14
xbar_FW = 300
xbar_ML = 12
xbar_MW = 280
sigma_L = 2
sigma_W = 50
prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(3,2))
for(i in 1:5){
hist(results$betaSample[,i], 50, freq=FALSE,
main = paste('Posterior of ',covNames[i],' beta'), xlab = paste('beta_',i))
}
# The posterior median is the optimal estimator under linear loss function (see Slides Lecture 4)
medians <- apply(results$betaSample,2,median)
names(medians) <- covNames
print(medians)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
xbar_FL = 14
xbar_FW = 300
xbar_ML = 12
xbar_MW = 280
sigma_L = 2
sigma_W = 50
prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
?paste
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(3,2))
for(i in 1:5){
hist(results$betaSample[,i], 50, freq=FALSE,
main = paste('Posterior of',covNames[i],'beta'), xlab = paste0('beta_',i,))
}
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(3,2))
for(i in 1:5){
hist(results$betaSample[,i], 50, freq=FALSE,
main = paste('Posterior of',covNames[i],'beta'), xlab = paste0('beta_',i))
}
# The posterior median is the optimal estimator under linear loss function (see Slides Lecture 4)
medians <- apply(results$betaSample,2,median)
names(medians) <- covNames
print(medians)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
xbar_FL = 14
xbar_FW = 300
xbar_ML = 12
xbar_MW = 280
sigma_L = 2
sigma_W = 50
prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
print(postProb)
postProb = mean(results$betaSample[,3]+results$betaSample[,4])
print(postProb)
postProb = mean(results$betaSample[,3]+results$betaSample[,4]>0)
print(postProb)
hist(results$betaSample[,3]+results$betaSample[,4],50)
postProb = mean(results$betaSample[,2]+results$betaSample[,5]>0)
print(postProb)
hist(results$betaSample[,2]+results$betaSample[,5],50)
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(3,2))
for(i in 1:5){
hist(results$betaSample[,i], 50, freq=FALSE,
main = paste('Posterior of',covNames[i],'beta'), xlab = paste0('beta_',i))
}
medians <- apply(results$betaSample,2,median)
names(medians) <- covNames
print(medians)
postProb = mean(results$betaSample[,2]+results$betaSample[,5]>0)
print(postProb)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
xbar_FL = 14
xbar_FW = 300
xbar_ML = 12
xbar_MW = 280
sigma_L = 2
sigma_W = 50
prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
# set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(3,2))
for(i in 1:5){
hist(results$betaSample[,i], 50, freq=FALSE,
main = paste('Posterior of',covNames[i],'beta'), xlab = paste0('beta_',i))
}
medians <- apply(results$betaSample,2,median)
names(medians) <- covNames
print(medians)
postProb = mean(results$betaSample[,2]+results$betaSample[,5]>0)
print(postProb)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
xbar_FL = 14
xbar_FW = 300
xbar_ML = 12
xbar_MW = 280
sigma_L = 2
sigma_W = 50
prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
# set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(3,2))
for(i in 1:5){
hist(results$betaSample[,i], 50, freq=FALSE,
main = paste('Posterior of',covNames[i],'beta'), xlab = paste0('beta_',i))
}
medians <- apply(results$betaSample,2,median)
names(medians) <- covNames
print(medians)
postProb = mean(results$betaSample[,2]+results$betaSample[,5]>0)
print(postProb)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
xbar_FL = 14
xbar_FW = 300
xbar_ML = 12
xbar_MW = 280
sigma_L = 2
sigma_W = 50
prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
# set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(3,2))
for(i in 1:5){
hist(results$betaSample[,i], 50, freq=FALSE,
main = paste('Posterior of',covNames[i],'beta'), xlab = paste0('beta_',i))
}
medians <- apply(results$betaSample,2,median)
names(medians) <- covNames
print(medians)
postProb = mean(results$betaSample[,2]+results$betaSample[,5]>0)
print(postProb)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
xbar_FL = 14
xbar_FW = 300
xbar_ML = 12
xbar_MW = 280
sigma_L = 2
sigma_W = 50
prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
# set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 1000
results <- BayesProbReg(y, X, mu, tau, 1000)
par(mfrow=c(3,2))
for(i in 1:5){
hist(results$betaSample[,i], 50, freq=FALSE,
main = paste('Posterior of',covNames[i],'beta'), xlab = paste0('beta_',i))
}
medians <- apply(results$betaSample,2,median)
names(medians) <- covNames
print(medians)
postProb = mean(results$betaSample[,2]+results$betaSample[,5]>0)
print(postProb)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
xbar_FL = 14
xbar_FW = 300
xbar_ML = 12
xbar_MW = 280
sigma_L = 2
sigma_W = 50
prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
knitr::opts_chunk$set(echo = TRUE,results="markup")
rm(list=ls())
source("ExamData.R")
# set.seed(1)
library(mvtnorm)
# titanic = titanic[sample(1316,184),]
y <- as.vector(titanic[,1])
X <- as.matrix(titanic[,-1])
covNames <- names(titanic)[2:length(names(titanic))]
nPara <- dim(X)[2]
# Setting up the prior
tau <- 50
mu <- as.vector(rep(0,nPara)) # Prior mean vector
nIter = 10000
results <- BayesProbReg(y, X, mu, tau, nIter)
par(mfrow=c(3,2))
for(i in 1:5){
hist(results$betaSample[,i], 50, freq=FALSE,
main = paste('Posterior of',covNames[i],'beta'), xlab = paste0('beta_',i))
}
medians <- apply(results$betaSample,2,median)
names(medians) <- covNames
print(medians)
postProb = mean(results$betaSample[,2]+results$betaSample[,5]>0)
print(postProb)
print(colMeans(results$betaSample))
print(results$ESS)
print(colMeans(results$betaSample))
print(results$ESS)
xbar_FL = 14
xbar_FW = 300
xbar_ML = 12
xbar_MW = 280
sigma_L = 2
sigma_W = 50
prob_unnorm_F = dnorm(10,14,sigma_L*sqrt(1+1/16))*dnorm(250,300,sigma_W*sqrt(1+1/16))*.75
prob_unnorm_M = dnorm(10,12,sigma_L*sqrt(1+1/4))*dnorm(250,280,sigma_W*sqrt(1+1/4))*.25
prob_F = prob_unnorm_F/(prob_unnorm_F+prob_unnorm_M)
print(prob_F)
plot(results$betaSample[,1],results$betaSample[,2])
plot(results$betaSample[,1],results$betaSample[,3])
plot(results$betaSample[,1],results$betaSample[,4])
plot(results$betaSample[,1],results$betaSample[,5])
plot(results$betaSample[,1],results$betaSample[,2])
plot(results$betaSample[,2],results$betaSample[,3])
plot(results$betaSample[,2],results$betaSample[,4])
plot(results$betaSample[,2],results$betaSample[,5])
